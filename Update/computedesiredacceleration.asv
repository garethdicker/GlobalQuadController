function [Control] = computedesiredacceleration(Control, Pose, Twist)

    % Computes the desired acceleration vector. 
    global g pPos dPos;
 
    % TODO: need to make new variable Twist.linAccel?
    % TODO: why would c be set to gravity? I thought it was zero
    
    switch recoveryStage
        case 1
            % Initialize attitude control.
            Control.acc = [0; 0; g];
        case 2
            % Set vertical velocity gain.
            dZ = 1; % TODO: play around with this number
            dPos(3,3) = dZ;
        case 3
            % Add vertical position control and horizontal velocity control
            pZ = 1;
            pPos 
    % GainVelocity = [dXY; dXY; dZ];
    
    % once Twist.linVel(1:2) < 0.2 m/s
        case 4
    % 4) Add horizontal position control.
    % GainPosition = [pXY; pXY; pZ];
    % GainVelocity = [dXY; dXY; dZ];
        otherwise 
            error('Invalid value for recoveryStage');
    end
    
    % Compute desired acceleration as combination of position and velocity
    % controls plus a gravity term
    Control.acc = pPos * (Control.pose.posn - Pose.posn) + ...
                  dPos * (Control.twist.linVel - Twist.linVel) + ...
                  + [0; 0; g];

end